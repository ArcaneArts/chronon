{
  "name": "RAG Engine",
  "nodes": [
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('onFS').item.json.event }}",
                    "rightValue": "add",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "58fa408f-c1ea-4512-b4e5-70e0991a249a"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "add"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "da099347-4b1e-432a-bb24-a2d87dfc9e57",
                    "leftValue": "={{ $('onFS').item.json.event }}",
                    "rightValue": "change",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "upd"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d2d23478-71dd-4485-b225-7454e79b1b79",
                    "leftValue": "={{ $('onFS').item.json.event }}",
                    "rightValue": "unlink",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "del"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        96,
        -48
      ],
      "id": "617fcfa6-65a0-4079-bbd2-d4cefde96fa6",
      "name": "Switch"
    },
    {
      "parameters": {
        "type": "SHA256",
        "value": "=path={{ $json.path }}",
        "dataPropertyName": "hash"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -160,
        -16
      ],
      "id": "d1f4a3eb-8bb7-4fce-a2cd-cd82764424e1",
      "name": "hashPath"
    },
    {
      "parameters": {
        "triggerOn": "folder",
        "path": "/documents/corpus",
        "events": [
          "add",
          "change",
          "unlink"
        ],
        "options": {
          "awaitWriteFinish": true,
          "followSymlinks": true,
          "ignored": ".DS_Store",
          "ignoreInitial": false,
          "usePolling": false,
          "ignoreMode": "match"
        }
      },
      "type": "n8n-nodes-base.localFileTrigger",
      "typeVersion": 1,
      "position": [
        -208,
        -224
      ],
      "id": "fedfcc91-0cc8-47da-a611-1a37e89c59ba",
      "name": "onFS"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "state",
        "key": "=corpus.{{ $json.hash }}",
        "keyType": "string",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -32,
        -16
      ],
      "id": "f7d4d7be-2f70-474c-a9dc-f1ce9b25db55",
      "name": "readState",
      "credentials": {
        "redis": {
          "id": "8bQQYAUHxegPNwcL",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ef791ad2-c2ae-4696-a574-761c92ebe852",
              "leftValue": "={{ $json.state }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        272,
        -288
      ],
      "id": "a055d8c2-5ba3-4fdf-a127-b086dd920366",
      "name": "!exists"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ef791ad2-c2ae-4696-a574-761c92ebe852",
              "leftValue": "={{ $json.state }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        272,
        -160
      ],
      "id": "06ee53dd-8fe6-4691-b6a5-19c76f8fc4c6",
      "name": "exists"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const s = $input.item.json.path.split(\".\");\nconst x = s[s.length - 1].toLowerCase();\n$input.item.json.extension = x;\n\nconst valid = [\n  \"txt\",\n  \"md\",\n  \"pdf\",\n  \"docx\",\n  \"rtf\",\n  \"htm\", \"html\",\n  \"yaml\", \"yml\", \"conf\"\n];\n\n$input.item.json.valid = valid.includes(x);\n\nreturn $input.item;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        -224
      ],
      "id": "e1a57a9b-c89b-4fc3-b578-5493b1d75a4e",
      "name": "ext"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8387e927-6a61-4aee-8634-12f891040907",
              "leftValue": "={{ $json.valid }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        48,
        -224
      ],
      "id": "b6f19840-c2e4-43b4-a54a-7ccce7b28bf6",
      "name": "valid"
    },
    {
      "parameters": {
        "fieldToSplitOut": "keys",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        288,
        -704
      ],
      "id": "7dbf71ab-1973-4c30-a5cd-33f0e32d7256",
      "name": "Split Out"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "692d31f8-7b4f-4e3c-905a-8b2bab720bf6",
              "name": "key",
              "value": "={{ $json.keys }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        416,
        -704
      ],
      "id": "5124601c-f0f1-4ada-88a9-f1daa4c381bd",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8464ad8d-1d3e-4531-978c-0988f4b32425",
              "leftValue": "={{ $json.stdout }}",
              "rightValue": "missing",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        160,
        -496
      ],
      "id": "c95e20ae-0269-41d4-9a3d-41aba7f40c8b",
      "name": "missing?"
    },
    {
      "parameters": {
        "operation": "keys",
        "keyPattern": "*",
        "getValues": false
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        160,
        -704
      ],
      "id": "722c4983-4430-425e-a798-266b64911a66",
      "name": "keys",
      "credentials": {
        "redis": {
          "id": "8bQQYAUHxegPNwcL",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "path",
        "key": "={{ $json.key }}",
        "options": {
          "dotNotation": true
        }
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -96,
        -496
      ],
      "id": "da4a39ec-6eb7-41c7-8447-4b866afb795d",
      "name": "get",
      "credentials": {
        "redis": {
          "id": "8bQQYAUHxegPNwcL",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "type": "SHA256",
        "value": "=path={{ $('get').item.json.path }}",
        "dataPropertyName": "hash"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        288,
        -496
      ],
      "id": "df732f05-0a45-42a1-80c5-a8236f73cad8",
      "name": "hashPath1"
    },
    {
      "parameters": {
        "content": "# Boot\nAutomatically handles orphans from missed events, and handles initial setups",
        "height": 464,
        "width": 768,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -176,
        -800
      ],
      "id": "a34eb756-bf69-4450-91b6-6154b1ab1271",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "events": [
          "init"
        ]
      },
      "type": "n8n-nodes-base.n8nTrigger",
      "typeVersion": 1,
      "position": [
        -144,
        -704
      ],
      "id": "ce806497-02e2-442f-bd85-a6583495658b",
      "name": "onBoot"
    },
    {
      "parameters": {
        "command": "=test -f \"{{ $json.path }}\" && echo \"exists\" || echo \"missing\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        32,
        -496
      ],
      "id": "8b233cab-43c8-4714-89e2-442265885edc",
      "name": "test"
    },
    {
      "parameters": {
        "content": "# IO Events\nWatches /documents/corpus and automatically fires install events",
        "height": 464,
        "width": 832,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -240,
        -320
      ],
      "id": "158cdb81-5558-4ded-ae7f-926548c26870",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "command": "mkdir -p /documents/corpus && mkdir -p /documents/text"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        32,
        -704
      ],
      "id": "8813913a-bbac-4635-a29d-a764b939c3d2",
      "name": "Execute Command"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8c79246c-02b6-468f-b55e-c31b78d0c814",
              "leftValue": "={{ $json.install }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        624,
        -496
      ],
      "id": "a4c6a686-c327-4b7c-af40-08d079f371ab",
      "name": "If"
    },
    {
      "parameters": {
        "model": "nomic-embed-text:latest"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        736,
        -160
      ],
      "id": "fe8796b6-f989-44fe-a060-45aeab6c6e87",
      "name": "nomic",
      "credentials": {
        "ollamaApi": {
          "id": "uRRto14J4fbOBnhw",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "loader": "textLoader",
        "textSplittingMode": "custom",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "file",
                "value": "={{ $('ext2').item.json.path }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        816,
        -160
      ],
      "id": "29ae01f2-f3af-44b2-89a7-3b1bbe041db8",
      "name": "loader"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=corpus.{{ $('If').item.json.hashPath }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        800,
        -16
      ],
      "id": "dd731e20-ecbe-44c0-9372-de8498202f61",
      "name": "saveState",
      "credentials": {
        "redis": {
          "id": "8bQQYAUHxegPNwcL",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=corpus.{{ $('ext2').item.json.hashPath }}",
        "value": "={{ $('ext2').item.json.path }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1168,
        -288
      ],
      "id": "5e8e86ad-17ee-44c6-8930-7033614571e9",
      "name": "saveState1",
      "credentials": {
        "redis": {
          "id": "8bQQYAUHxegPNwcL",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const s = $('If').item.json.path.split(\".\");\nlet p = $('If').item.json.path.split(\"/\");\np.pop();\np.pop();\np.push(\"text\");\np.push($('If').item.json.hashPath + \".txt\")\n$input.item.json.extension = s[s.length - 1].toLowerCase();\n$input.item.json.textPath = p.join(\"/\");\n\nreturn $input.item;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        912,
        -16
      ],
      "id": "7b0f8060-de68-43ff-b922-d3816efe3432",
      "name": "ext1"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const s = $input.item.json.path.split(\".\");\n$input.item.json.extension = s[s.length - 1].toLowerCase();\n$input.item.json.textPath = `/documents/text/${$input.item.json.hashPath}.txt`;\nreturn $input.item;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        784,
        -496
      ],
      "id": "59164c23-f10b-4b19-85b3-531d5ba87d90",
      "name": "ext2"
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "main",
          "mode": "list",
          "cachedResultName": "main"
        },
        "embeddingBatchSize": 100,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.3,
      "position": [
        816,
        -288
      ],
      "id": "740b4d22-28fc-4fcd-8079-cb32e2a2bf7d",
      "name": "install3",
      "credentials": {
        "qdrantApi": {
          "id": "l8KKOWm103sXubkj",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "point",
        "operation": "deletePoints",
        "collectionName": {
          "__rl": true,
          "value": "main",
          "mode": "list",
          "cachedResultName": "main"
        },
        "filter": "={\n    \"must\": [\n      {\n        \"key\": \"metadata.file\",\n        \"match\": {\n          \"value\": \"{{ $json.path }}\"\n        }\n      }\n    ]\n  }",
        "requestOptions": {}
      },
      "type": "n8n-nodes-qdrant.qdrant",
      "typeVersion": 1,
      "position": [
        688,
        -16
      ],
      "id": "81eeaae6-9231-4c6e-852f-771a485f61bb",
      "name": "uninstall2",
      "credentials": {
        "qdrantRestApi": {
          "id": "3NNZvUwDOwYTVrHs",
          "name": "Qdrant account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Install\nReceives a path, hash of the path, and a bool to install or not. Can uninstall with install=false",
        "height": 736,
        "width": 752,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        608,
        -592
      ],
      "id": "f950fc8a-3670-4e99-ac7f-b100a1d92659",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $json.keys }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -384,
        -496
      ],
      "id": "56761cf5-8baa-4487-aaa3-a9ce3679dba6",
      "name": "deleteKey",
      "credentials": {
        "redis": {
          "id": "8bQQYAUHxegPNwcL",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "keys",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -528,
        -496
      ],
      "id": "310ed986-4b47-4675-8896-40895c5a557b",
      "name": "loop"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2514da39-5f9b-4684-a713-16821d72cceb",
              "leftValue": "={{ $json['Type DELETE to confirm'] }}",
              "rightValue": "DELETE",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -528,
        -688
      ],
      "id": "98bbda6c-b92c-463d-92de-2fef96182350",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "keys",
        "keyPattern": "*",
        "getValues": false
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -672,
        -496
      ],
      "id": "581651c6-aee3-4bed-bf84-6e62dd59ec97",
      "name": "keys1",
      "credentials": {
        "redis": {
          "id": "8bQQYAUHxegPNwcL",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Wipe Database\nWipes the qDrant DB, redis & caches",
        "height": 448,
        "width": 544,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -736,
        -784
      ],
      "id": "8dd955bf-8f4b-4b0e-a9b0-e34e9c5d6511",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "resource": "point",
        "operation": "deletePoints",
        "collectionName": {
          "__rl": true,
          "value": "main",
          "mode": "list",
          "cachedResultName": "main"
        },
        "filter": "{\n    \"must\": [\n      \n    ]\n  }",
        "requestOptions": {}
      },
      "type": "n8n-nodes-qdrant.qdrant",
      "typeVersion": 1,
      "position": [
        -384,
        -688
      ],
      "id": "8b917e57-e279-4820-a47b-fd834cab7aa8",
      "name": "wipe",
      "credentials": {
        "qdrantRestApi": {
          "id": "3NNZvUwDOwYTVrHs",
          "name": "Qdrant account"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "The knowledge base",
        "qdrantCollection": {
          "__rl": true,
          "value": "main",
          "mode": "list",
          "cachedResultName": "main"
        },
        "topK": 10,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.3,
      "position": [
        -544,
        -80
      ],
      "id": "50936468-f895-4d42-9bfa-d2f6ca02186c",
      "name": "onQuery",
      "credentials": {
        "qdrantApi": {
          "id": "l8KKOWm103sXubkj",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-oss:20b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -736,
        -80
      ],
      "id": "d4a5bade-e7da-4dee-b861-e5b847010c78",
      "name": "oss",
      "credentials": {
        "ollamaApi": {
          "id": "uRRto14J4fbOBnhw",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a helpful SME on a bunch of information accessible via tool calling. When the user asks you a question, you most likely will need to query the knowledge base first before answering even if it seems like you already know the common answer, always query first.\n\n* Always specify the \"file\" parameter to source where your getting your information from"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -608,
        -224
      ],
      "id": "1a560c2b-b2fe-47d7-978d-c938fb41f11d",
      "name": "agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -736,
        -224
      ],
      "id": "ee4977fe-f292-43ec-bc19-f51064c6d4c3",
      "name": "onChat",
      "webhookId": "c99bf8f0-9dc8-4643-935c-074d7729e732"
    },
    {
      "parameters": {
        "model": "nomic-embed-text:latest"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        -640,
        -80
      ],
      "id": "e1ed43c6-051e-4bac-b2b3-d085b0828e57",
      "name": "nomic1",
      "credentials": {
        "ollamaApi": {
          "id": "uRRto14J4fbOBnhw",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Agent Chat\nChat with the agent to interact with data",
        "height": 368,
        "width": 496,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -752,
        -320
      ],
      "id": "c9a1ae04-45ec-4bf1-9c6c-651e49b54e1b",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "05bc7a77-5549-446c-a923-7abd400e0153",
              "name": "path",
              "value": "={{ $('get').item.json.path }}",
              "type": "string"
            },
            {
              "id": "3742b4d3-68df-48fe-9d06-d422a23a0e13",
              "name": "install",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "0708efb0-0994-42d1-a648-8ee42b316271",
              "name": "hashPath",
              "value": "={{ $('get').item.json.path }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        448,
        -496
      ],
      "id": "f3e3cbe6-52f3-43e2-b6bf-74773541b395",
      "name": "prune"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "05bc7a77-5549-446c-a923-7abd400e0153",
              "name": "path",
              "value": "={{ $('onFS').item.json.path }}",
              "type": "string"
            },
            {
              "id": "3742b4d3-68df-48fe-9d06-d422a23a0e13",
              "name": "install",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "0708efb0-0994-42d1-a648-8ee42b316271",
              "name": "hashPath",
              "value": "={{ $('hashPath').item.json.hash }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        480,
        -224
      ],
      "id": "b5bb2e74-0a14-476e-9f5d-37cad0c18670",
      "name": "install"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "05bc7a77-5549-446c-a923-7abd400e0153",
              "name": "path",
              "value": "={{ $('onFS').item.json.path }}",
              "type": "string"
            },
            {
              "id": "3742b4d3-68df-48fe-9d06-d422a23a0e13",
              "name": "install",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "0708efb0-0994-42d1-a648-8ee42b316271",
              "name": "hashPath",
              "value": "={{ $('hashPath').item.json.hash }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        480,
        -96
      ],
      "id": "a6acb1f7-cd8a-4ab5-9e86-d5940de5a877",
      "name": "uninstall"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        272,
        -32
      ],
      "id": "9490ca60-8805-42ec-8f17-6fe4818f2e64",
      "name": "Wait",
      "webhookId": "b0dedc55-e14e-42f3-9841-8005befd467f"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1008,
        -496
      ],
      "id": "c1e22f11-d63b-4774-b675-a2cf76dc9e43",
      "name": "waitfor"
    },
    {
      "parameters": {
        "fileSelector": "={{ $('ext2').item.json.textPath }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        1120,
        -496
      ],
      "id": "d24d0308-396e-4549-a621-5a4e3a0589b5",
      "name": "readtext"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {}
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1056,
        -288
      ],
      "id": "cdf767b9-9e98-4ca2-8a7e-1e9c5044abe6",
      "name": "agg"
    },
    {
      "parameters": {
        "command": "=rm -rf {{ $json.textPath }}"
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1024,
        -16
      ],
      "id": "44069345-ba62-43b4-8192-1c5b33c066aa",
      "name": "remtext"
    },
    {
      "parameters": {
        "chunkSize": 500,
        "chunkOverlap": 100,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1056,
        -160
      ],
      "id": "ba8fb2c7-eea5-470f-af3b-c3b14e1ef571",
      "name": "rcts"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://helm/process",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "input",
              "value": "={{ $('ext2').item.json.path }}"
            },
            {
              "name": "output",
              "value": "={{ $('ext2').item.json.textPath }}"
            }
          ]
        },
        "options": {
          "timeout": 3600000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        896,
        -496
      ],
      "id": "e615ad40-5e4e-487d-a002-20a3d0ce136c",
      "name": "helm"
    },
    {
      "parameters": {
        "formTitle": "Are you sure?",
        "formDescription": "You are about to wipe the qDrant vector store, and the redis cache list. This will not delete any actual files in the documents/corpus directory. \\n\\nOnce executed, remember to de-activate, then re-activate the onFS event to bulk-trigger any existing files in the corpus directory to ensure they are synchronized.",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Type DELETE to confirm",
              "placeholder": "DELETE",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -672,
        -688
      ],
      "id": "53fbda4b-3cc7-49ec-9127-f96b4a50ca3b",
      "name": "WIPE",
      "webhookId": "6c0c1293-f9e7-42ed-a540-3cc9c4ff4ffb"
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryMongoDbChat",
      "typeVersion": 1,
      "position": [
        -336,
        -208
      ],
      "id": "d7f44c4b-f683-4bfb-8378-d9fe91b51897",
      "name": "MongoDB Chat Memory",
      "credentials": {
        "mongoDb": {
          "id": "fkqtd4eD8KlxUkVd",
          "name": "MongoDB account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Switch": {
      "main": [
        [
          {
            "node": "!exists",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "exists",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "uninstall",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "hashPath": {
      "main": [
        [
          {
            "node": "readState",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "onFS": {
      "main": [
        [
          {
            "node": "ext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "readState": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "!exists": {
      "main": [
        [
          {
            "node": "install",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "exists": {
      "main": [
        [
          {
            "node": "uninstall",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "install",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ext": {
      "main": [
        [
          {
            "node": "valid",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "valid": {
      "main": [
        [
          {
            "node": "hashPath",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "get",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "missing?": {
      "main": [
        [
          {
            "node": "hashPath1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "keys": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get": {
      "main": [
        [
          {
            "node": "test",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "hashPath1": {
      "main": [
        [
          {
            "node": "prune",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "onBoot": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "test": {
      "main": [
        [
          {
            "node": "missing?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "keys",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "ext2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "uninstall2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "nomic": {
      "ai_embedding": [
        [
          {
            "node": "install3",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "loader": {
      "ai_document": [
        [
          {
            "node": "install3",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "saveState": {
      "main": [
        [
          {
            "node": "ext1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ext1": {
      "main": [
        [
          {
            "node": "remtext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ext2": {
      "main": [
        [
          {
            "node": "helm",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "install3": {
      "main": [
        [
          {
            "node": "agg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "uninstall2": {
      "main": [
        [
          {
            "node": "saveState",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "loop": {
      "main": [
        [
          {
            "node": "deleteKey",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "keys1",
            "type": "main",
            "index": 0
          },
          {
            "node": "wipe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "keys1": {
      "main": [
        [
          {
            "node": "loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "onQuery": {
      "ai_tool": [
        [
          {
            "node": "agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "oss": {
      "ai_languageModel": [
        [
          {
            "node": "agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "onChat": {
      "main": [
        [
          {
            "node": "agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "nomic1": {
      "ai_embedding": [
        [
          {
            "node": "onQuery",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "prune": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "install": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "saveState1": {
      "main": [
        []
      ]
    },
    "uninstall": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "install",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "waitfor": {
      "main": [
        [
          {
            "node": "readtext",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "readtext": {
      "main": [
        [
          {
            "node": "install3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "agg": {
      "main": [
        [
          {
            "node": "saveState1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "rcts": {
      "ai_textSplitter": [
        [
          {
            "node": "loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "helm": {
      "main": [
        [
          {
            "node": "waitfor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WIPE": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "91a6ab75-bd65-4622-89b6-0e5c37cc4075",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "4b07eb39ab76e508c1311bffcd2dabefcfa1bc354720a93de775e1ebaadf4763"
  },
  "id": "UCCnXGVIsH05pGPz",
  "tags": [
    {
      "createdAt": "2025-08-29T16:03:15.515Z",
      "updatedAt": "2025-08-29T16:03:15.515Z",
      "id": "RzzeS825tGUIMHHO",
      "name": "event"
    }
  ]
}